Date,Repository-Link,Github-Link,Summary,Readme-Text,Classification,Image-Links,Video-Links,Stars,Suitable-Image-Links,Suitable-Video-Links,Repository-Creation-Date
2024-02-25,https://github.com/karpathy/minbpe,https://raw.githubusercontent.com/karpathy/minbpe/master/README.md,"Minbpe is a minimalist codebase for Byte Pair Encoding (BPE), a tokenization method essential for training large language models (LLMs) like GPT. Originally introduced in the GPT-2 publication by OpenAI, BPE operates on UTF-8 strings, enhancing NLP applications like those seen in GPT, Llama, and Mistral. The repository includes two Tokenizers capable of training vocabulary, encoding text to tokens, and decoding tokens back to text. It features a basic implementation directly working with text, and a regex-based version that preprocesses text into categories to prevent cross-category merges, aligning with GPT-4's approach. Additionally, a GPT4Tokenizer replicates GPT-4's tokenization, emphasizing recoverability of exact merges and handling specific token permutations. Furthermore, the codebase offers the ability to train custom tokenizers and introduces potential enhancements like optimized versions and broader model support. The files are thoroughly documented with examples, and the project is licensed under MIT, making it accessible and modifiable.",,NLP-Tokenization,,https://www.youtube.com/watch?v=zduSFxRajkE,0,,,
2024-02-25,https://github.com/LargeWorldModel/LWM,https://raw.githubusercontent.com/LargeWorldModel/LWM/main/README.md,"The Large World Model (LWM) is a cutting-edge, general-purpose, large-context, multimodal autoregressive model designed for expansive language, image, and video understanding and generation. It surpasses current models by effectively training on extensive datasets of long videos and books with a novel technique called RingAttention, addressing the challenges of memory constraints and computational complexity in handling multimodal sequences exceeding millions of tokens. LWM sets new benchmarks in retrieval tasks and video understanding, provides solutions for vision-language training difficulties, and is fully open-sourced with a 7B parameter capacity. Its remarkable capabilities include high-accuracy fact retrieval across 1M contexts, answering questions from over an hour of video, chatting using images, and generating videos and images from text. The setup recommends TPUs for optimal performance, though GPUs are supported. The codebase supports various context sizes for language-only and vision-language models, and is optimized for large-scale training and inference tasks, paving the way for a deeper understanding of human knowledge and the multimodal world.",,Multimodal-Autoregressive,,,0,,,
2024-02-25,https://github.com/google/magika,https://raw.githubusercontent.com/google/magika/main/README.md,"Magika is an innovative AI-powered tool developed for precise file type detection, leveraging deep learning for high accuracy. It features a compact, efficient Keras model that performs detections swiftly on minimal computing resources. Tested across over a million files and more than 100 content types, Magika showcases remarkable precision and recall rates exceeding 99%. This tool enhances user safety on Google platforms like Gmail and Drive by facilitating the accurate routing of files to appropriate security scans. Magika is available in various formats including a Python command line tool, a Python API, and an experimental web version, ensuring broad accessibility. It supports batching for large scale use, offers high compatibility with existing file types, and allows customization of prediction preferences. Moreover, it is open source, inviting contributions and further development from the community. For those interested, Magika can be explored through an interactive web demo and is documented extensively online for both Python and JavaScript implementations.",,File-Type-Detection,,,0,,,
2024-02-25,https://github.com/sherlock-project/sherlock,https://raw.githubusercontent.com/sherlock-project/sherlock/master/README.md,"The Sherlock Project provides a tool for tracking down social media accounts by username across multiple networks. It offers detailed guides for installation and usage, including options for searching with various filters, handling output, and customizing requests through proxies or Tor for anonymous searching. Installation involves cloning the repository, navigating to the Sherlock directory, and installing requirements with Python. Usage is flexible, allowing searches for single or multiple usernames, with results optionally saved to files or folders. The tool supports Docker, enabling it to run in containers, and even offers a docker-compose option for easier usage. Contributions are encouraged, especially in adding new sites or improving site support. Testing is important for contributing developers, with guidance provided for running tests and managing test coverage. Sherlock operates under the MIT license, inviting open collaboration and development.",,Username-Search,,,0,,,
2024-02-25,https://github.com/chatchat-space/Langchain-Chatchat,https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/README.md,"LangChain-Chatchat, previously known as Langchain-ChatGLM, is an open-source project built on ChatGLM and other large language models (LLMs), utilizing the Langchain framework. It offers a Retrieval-Augmented Generation (RAG) large model knowledge base that can be deployed offline. The project aims to establish a Chinese-friendly, open-source model support system that can operate offline. Inspired by various projects and using models like Vicuna, Alpaca, LLaMA, and others, it enables offline deployment using open-source models while supporting OpenAI GPT API calls for further enhancement. Version 0.2.10 marks the end of the 0.2.x series, with future efforts focusing on developing the more application-oriented Langchain-Chatchat 0.3.x. The project achieves local inference for knowledge bases, addressing data security and privacy concerns for businesses. It includes instructions for environment setup, model downloading, database initialization, and starting the project, along with Docker deployment options. Significant milestones include the release of early versions, rebranding, and achievements in hackathons, with over 20K GitHub stars. The project invites contributions and discussions through its Telegram group, WeChat group, and official WeChat public account.",,Knowledge-Retrieval-Chatbot,https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/logo-long-chatchat-trans-v2.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/langchain+chatglm.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/langchain+chatglm2.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/fastapi_docs_026.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/LLM_success.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/init_knowledge_base.jpg,,0,https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/logo-long-chatchat-trans-v2.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/langchain+chatglm.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/langchain+chatglm2.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/fastapi_docs_026.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/LLM_success.png; https://raw.githubusercontent.com/chatchat-space/Langchain-Chatchat/master/img/init_knowledge_base.jpg,,
2024-02-25,https://github.com/lllyasviel/stable-diffusion-webui-forge,https://raw.githubusercontent.com/lllyasviel/stable-diffusion-webui-forge/main/README.md,"Stable Diffusion WebUI Forge is an enhancement over the original WebUI for Stable Diffusion, offering improved development ease, optimized resource management, and faster inference speeds. Inspired by Minecraft Forge, it targets to serve as the developmental core for SD WebUI, supporting a variety of GPUs with significant speed ups in inference times and better GPU memory utilization. It introduces the Unet Patcher making it easier to implement methods like Self-Attention Guidance and Kohya High Res Fix in fewer lines of code, avoiding the need to modify UNet directly. Forge also adds several samplers and maintains a 100% compatibility with Automatic1111 WebUI, ensuring no unnecessary changes to the interface. Installation options include Git for experienced users or a one-click installation package. Additionally, Forge redefines backend operations for better efficiency and supports new functionalities like SVD, Z123, and masked control networks through an easier development process for extensions, ensuring comprehensive resource management and compatibility with existing extensions.",,AI-Optimization-Toolkit,,,0,,,
2024-02-25,https://github.com/OS-Copilot/FRIDAY,https://raw.githubusercontent.com/OS-Copilot/FRIDAY/main/README.md,"OS-Copilot introduces a framework for creating generalist computer agents, like FRIDAY, aimed at automating tasks in Linux and MacOS environments. This framework simplifies app interactions across diverse operating systems, enhancing productivity and efficiency. Users can quickly start with FRIDAY by cloning the GitHub repository, setting up a Python environment, installing dependencies, and configuring an OpenAI API key. For expanding FRIDAY's capabilities, a library of tools (FRIDAY-Gizmos) is maintained, where users can add or remove tools as needed. The project also offers an intuitive user interface for easy agent control and supports the deployment of custom API tools using FastAPI. A critical note is that OS-Copilot is provided without any warranty, and users are responsible for any risks. The community is encouraged to engage and share tools and ideas via Slack. The project is open for contact and further discussion, aiming to foster the development of intelligent, self-improving computer agents.",,AI-Assistant-System,,,0,,,
2024-02-25,https://github.com/WongKinYiu/yolov9,https://raw.githubusercontent.com/WongKinYiu/yolov9/main/README.md,"YOLOv9 introduces advancements in object detection with its implementation as detailed in ""YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information."" It offers a range of models (YOLOv9-S, M, C, E) showing varied performance metrics on the MS COCO dataset, with the YOLOv9-E model achieving the highest accuracy. A variety of resources, including demo links, Docker installation guide, and evaluation/training instructions, support users in implementing YOLOv9. The paper also mentions the release of small and medium models post-acceptance and publication. The citation section provides references for academic use. Additionally, it links to a multi-task learning approach based on YOLOR, suggesting integration with YOLOv9 for extended functionalities. Acknowledgements credit relevant repositories and projects contributing to the development of YOLOv9.",,Object-Detection,,,0,,,
2024-02-25,https://github.com/vvbbnn00/WARP-Clash-API,https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/README.md,"The WARP Clash API project enables subscription-based use of WARP+ with support for clients like Clash and Shadowrocket. It features an automatic WARP+ traffic refresh system providing 1GB every 18 seconds, an IP optimization tool, and easy deployment via Docker compose for private high-speed WARP+ nodes. Key features include support for multiple clients, setting your own LicenseKey, IP optimization, Docker compose deployment, automated WARP+ traffic acquisition, and subscription updates with random nodes for a ""gacha"" experience. The project emphasizes non-commercial, educational use and warns against illegal applications. Installation involves setting up Docker and Docker compose, downloading the project, optional configuration of a SECRET_KEY for public deployment, compiling, and running to obtain a subscription link. Additionally, manual IP optimization and various environment variables allow for customization of the project's functionality. Advanced operations include resetting account keys and setting a LicenseKey. The project acknowledges several open-source initiatives it builds upon and lists a community-deployed free instance available for use.",,VPN-Management-API,,,0,,,
2024-02-25,https://github.com/jackfrued/Python-100-Days,https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/README.md,骆昊的《Python - 100天从新手到大师》是一本全面介绍Python语言学习和实践的书籍，旨在帮助新手通过100天的学习成为Python大师。自项目上线后，骆昊收到反馈指出基础部分对新手较难，因此推出了简化的“Python-Core-50-Courses”项目，配有视频讲解，帮助初学者更好地学习Python基础。书中不仅涵盖了Python的基础知识，如变量、数据结构、控制流等，还深入讲解了面向对象编程、文件操作、网络编程等高级主题。此外，还介绍了Python在Web开发、数据分析、人工智能等领域的应用，为读者提供了丰富的项目实践机会。通过系统学习，读者可以掌握Python编程技巧，理解Python在各领域的应用，并有能力独立完成项目开发。,,Python编程教程,https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/agile-scrum-sprint-cycle.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/company_architecture.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/pylint.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/requirements_by_xmind.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/uml-class-diagram.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/power-designer-pdm.png,,0,https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/agile-scrum-sprint-cycle.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/company_architecture.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/pylint.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/requirements_by_xmind.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/uml-class-diagram.png; https://raw.githubusercontent.com/jackfrued/Python-100-Days/master/./res/power-designer-pdm.png,,
